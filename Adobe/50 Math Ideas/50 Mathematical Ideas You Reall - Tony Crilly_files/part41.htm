<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>40 Codes</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part40.htm">&lt; Previous</a><span> | </span><a href="../50%20Mathematical%20Ideas%20You%20Reall%20-%20Tony%20Crilly.html">Contents</a><span> | </span><a href="part42.htm">Next &gt;</a></p><p class="s1" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;"><a name="bookmark183">&zwnj;</a>40 <span class="h2">Codes</span><a name="bookmark184">&zwnj;</a></p><p style="padding-top: 10pt;text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 5pt;text-indent: 0pt;line-height: 107%;text-align: justify;">What does Julius Caesar have in common with the transmission of modern digital signals? The short answer is codes and coding. To send digital signals to a computer or a digital television set, the coding of pictures and speech into a stream of zeros and ones – a binary code – is essential for it is the only language these devices understand. Caesar used codes to communicate with his generals and kept his messages secret by changing around the letters of his message according to a key which only he and they knew.</p><p style="padding-top: 11pt;padding-left: 5pt;text-indent: 14pt;text-align: justify;">Accuracy was essential for Caesar and it is also required for the effective transmission of digital signals. Caesar also wanted to keep his codes to himself as do the cable and satellite broadcasting television companies who only want paying subscribers to be able make sense of their signals.</p><p style="padding-left: 5pt;text-indent: 14pt;text-align: justify;">Let’s look at accuracy first. Human error or ‘noise along the line’ can always occur, and must be dealt with. Mathematical thinking allows us to construct coding systems that automatically detect errors and even make corrections.</p><h3 style="padding-top: 16pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;">Error detection and correction</h3><p style="padding-top: 15pt;padding-left: 5pt;text-indent: 14pt;text-align: justify;">One of the first binary coding systems was the Morse code which makes use of two symbols, dots <b>• </b>and dashes <b>–</b>. The American inventor Samuel F.B. Morse sent the first intercity message using his code from Washington to Baltimore in 1844. It was a code designed for the electric telegraph of the mid-19th century with little thought to an efficient design. In Morse code, the letter A is coded as <b>• –</b>, B as <b>– •••</b>, C as <b>– </b>• <b>– • </b>and other letters as different sequences of dots and dashes. A telegraph operator sending ‘CAB’ would send the string <b>– • – • </b>/ <b>• – </b>/ <b>– •••. </b>Whatever its merits, Morse code is not very good at error detection let alone correction. If the Morse code operator wished to send ‘CAB’<b>, </b>but mistyped a dot for a dash in C, forgot the dash in A and noise on the wire substituted a dash for a dot in B, the receiver getting <b>•• – • </b>/ <b>• </b>/ <b>–– ••</b>, would see nothing wrong and interpret it as ‘FEZ’.</p><p style="padding-left: 5pt;text-indent: 14pt;text-align: left;"><a name="bookmark185">&zwnj;</a>At a more primitive level we could look at a coding system consisting of just 0 and 1 where 0 represents one word and 1 another. Suppose an army commander has to transmit a message to his troops which is either ‘invade’ or ‘do not invade’. The ‘invade’ instruction is coded by ‘1’ and the ‘do not invade’ instruction by ‘0’. If a 1 or a 0 was incorrectly transmitted the receiver would never know – and the wrong instruction would be given, with disastrous consequences.</p><p style="padding-left: 5pt;text-indent: 14pt;text-align: justify;">We can improve matters by using code words of length two. If this time we code the ‘invade’ instruction by 11 and the ‘do not invade’ by 00, this is better. An error in one digit would result in 01 or 10 being received. As only 11 or 00 are legitimate code words, the receiver would certainly know that an error had been made. The advantage of this system is that an error would be detectable, but we still would not know how to correct it. If 01 were received, how would we know whether 00 or 11 should have been sent?</p><p style="padding-left: 5pt;text-indent: 14pt;text-align: justify;">The way to a better system is to combine design with longer code words. If we code the ‘invade’ instruction by 111 and the ‘do not invade’ by 000 an error in one digit could certainly be detected, as before. If we knew that at most one error could be made (a reasonable assumption since the chance of two errors in one code word is small), the correction could actually be made by the receiver. For example, if 110 were received then the correct message would have been 111. With our rules, it could not be 000 since this code word is two errors away from 110. In this system there are only two</p><p style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;">code words 000 and 111 but they are far enough apart to make error detection and correction possible.</p><p style="padding-left: 5pt;text-indent: 14pt;text-align: justify;">The same principle is used when word processing is in autocorrect mode. If we type ‘animul’ the word processor detects the error and corrects it by taking the nearest word, ‘animal’. The English language is not fully correcting though because if we type ‘lomp’ there is no unique nearest word; the words, lamp, limp, lump, pomp and romp are all equidistant in terms of single errors from lomp.</p><p style="padding-left: 5pt;text-indent: 14pt;text-align: justify;"><a name="bookmark186">&zwnj;</a>A modern binary code consists of code words that are blocks consisting of zeros and ones. By choosing the legitimate code words far enough apart, both detection and correction are possible. The code words of Morse code are too close together but the modern code systems used to transmit data from satellites can always be set in autocorrect mode. Long code words with high performance in terms of error correction take longer to transmit so there is a tradeoff between length and speed of transmission. Voyages into deep space by NASA have used codes that are three-error correcting and these have proved satisfactory in combating noise on the line.</p><h3 style="padding-top: 16pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;">Making messages secret</h3><p style="padding-top: 14pt;padding-left: 5pt;text-indent: 14pt;text-align: justify;">Julius Caesar kept his messages secret by changing around the letters of his message according to a key that only he and his generals knew. If the key fell into the wrong hands his messages could be deciphered by his enemies. In medieval times, Mary Queen of Scots sent secret messages in code from her prison cell. Mary had in mind the overthrow of her cousin, Queen Elizabeth, but her coded messages were intercepted. More sophisticated than the Roman method of rotating all letters by a key, her codes were based on substitutions but ones whose key could be uncovered by analysing the frequency of letters and symbols used. During the Second World War the German Enigma code was cracked by the discovery of its key. In this case it was a formidable challenge but the code was always vulnerable because the key was transmitted as part of the message.</p><p style="padding-left: 5pt;text-indent: 14pt;text-align: justify;">A startling development in encryption of messages was discovered in the 1970s. Running counter to everything that had been previously believed, it said that the secret key could be broadcast to all and yet the message could remain entirely safe. This is called public key cryptography. The method depends on a 200 year old theorem in a branch of mathematics glorified for being the most useless of all.</p><h3 style="padding-top: 16pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;">Public key encryption</h3><p style="padding-top: 14pt;padding-left: 5pt;text-indent: 14pt;text-align: justify;">Mr John Sender, a secret agent known in the spying fraternity as ‘J’, has just arrived in town and wants to send his minder Dr Rodney Receiver a secret message to announce his arrival. What he does next is rather curious. He goes to the public library takes a town directory off the shelf and looks up Dr R. Receiver. In the directory he finds two numbers alongside Receiver’s name – a long one, which is 247, and a short one 5. This information is available to all and sundry, and it is all the information John Sender requires to encrypt his message, which for simplicity is his calling card, J. This letter is number 74 in a list of words, again publicly available.</p><p style="padding-left: 5pt;text-indent: 14pt;text-align: justify;">Sender encrypts 74 by calculating 74<span class="s20">5 </span>(modulo 247), that is, he wants to know the remainder on dividing 74<span class="s20">5 </span>by 247. Working out 74<span class="s20">5 </span>is just about possible on a handheld calculator, but it has to be done exactly:</p><p class="s10" style="padding-top: 1pt;padding-left: 15pt;text-indent: 0pt;text-align: center;">74<span class="s21">5 </span>= 74 × 74 × 74 × 74 × 74 = 2,219,006,624</p><p style="padding-left: 19pt;text-indent: 0pt;text-align: left;">and</p><p class="s10" style="padding-top: 3pt;padding-left: 15pt;text-indent: 0pt;text-align: center;">2,219,006,624 = 8,983,832 × 247 + 120</p><p style="padding-left: 5pt;text-indent: 14pt;text-align: justify;"><a name="bookmark187">&zwnj;</a>so dividing his huge number by 247 he gets the remainder 120. Sender’s encrypted message is 120 and he transmits this to Receiver. Because the numbers 247 and 5 were publicly available anyone could encrypt a message. But not everyone could decrypt it. Dr R. Receiver has more information up his sleeve. He made up his personal number 247 by multiplying together two prime numbers. In this case he obtained the number 247 by multiplying <i>p </i>= 13 and <i>q </i>= 19, but only he knows this.</p><p style="padding-left: 5pt;text-indent: 14pt;text-align: justify;">This is where the ancient theorem due to Leonhard Euler is taken out and dusted down. Dr R. Receiver uses the knowledge of <i>p </i>= 13 and <i>q </i>= 19 to find a value of <i>a </i>where 5 × <i>a </i>≡ 1 modulo (<i>p </i>– 1)(<i>q </i>– 1) where the symbol ≡ means equals in modular arithmetic. What is <i>a </i>so that dividing 5 × <i>a </i>by 12 × 18 = 216 leaves remainder 1? Skipping the actual calculation he finds <i>a </i>= 173.</p><p style="padding-left: 5pt;text-indent: 14pt;text-align: justify;">Because he is the only one who knows the prime numbers <i>p </i>and <i>q</i>, Dr Receiver is the only one who can calculate the number 173. With it he works out the remainder when he divides the huge number 120<span class="s20">173 </span>by 247. This is outside the capacity of a hand held calculator but is easily found by using a computer. The answer is 74, as Euler knew two hundred years ago. With this information, Receiver looks up word 74 and sees that J is back in town.</p><p style="padding-left: 5pt;text-indent: 14pt;text-align: justify;">You might say, surely a hacker could discover the fact that 247 = 13 × 19 and the code could be cracked. You would be correct. But the encryption and decryption principle is the same if Dr Receiver had used another number instead of 247. He could choose two very big prime numbers and multiply them together to get a much larger number than 247.</p><p style="padding-left: 5pt;text-indent: 14pt;text-align: justify;">Finding the two prime factors of a very large number is virtually impossible – what are the factors of 24,812,789,922,307 for example? But numbers much larger than this could also be chosen. The public key system is secure and if the might of supercomputers joined together are successful in factoring an encryption number, all Dr Receiver has to do is increase its size still further. In the end it is considerably easier for Dr Receiver to ‘mix boxes of black sand and white sand together’ than for any hacker to unmix them.</p><h1 style="padding-top: 10pt;padding-left: 64pt;text-indent: 0pt;text-align: left;">the condensed idea</h1><p class="s22" style="padding-bottom: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Keeping messages secret</p><p style="padding-left: 19pt;text-indent: 0pt;text-align: left;"><span><img width="750" height="87" alt="image" src="Image_347.jpg"/></span></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part40.htm">&lt; Previous</a><span> | </span><a href="../50%20Mathematical%20Ideas%20You%20Reall%20-%20Tony%20Crilly.html">Contents</a><span> | </span><a href="part42.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
